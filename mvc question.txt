http://jobsearch.about.com/od/morejobletters/a/jobappletter.htm

FirstOrDefault() 
SingleOrDefault()
http://stackoverflow.com/questions/7663213/in-linq-whats-the-difference-between-firstordefault-and-singleordefault
http://www.technicaloverload.com/linq-single-vs-singleordefault-vs-first-vs-firstordefault/

iqueriable vs iEnumrearable
http://stackoverflow.com/questions/2433306/whats-the-difference-between-iqueryable-and-ienumerable
http://rkandhal.com/09/06/ienumerable-vs-icollection-vs-iqueryable-vs-ilist/
http://www.codeproject.com/Articles/732425/IEnumerable-Vs-IQueryable

--diff http post and http get
	http get
		Data is visible to the user as it posts as query string.
		It is not secure but fast and quick.
		It use Stack method for passing form variable.
		Data is limited to max length of query string.
		It is good when you want user to bookmark page.
	http post
		Data is submitted in http request body.
		Data is not visible in the url.
		It is more secured but slower as compared to GET.
		It use heap method for passing form variable
		It can post unlimited form variables.
		It is advisable for sending critical data which should not visible to users.

--diff varchar and nvarchar
	An nvarchar column can store any Unicode data
	
--webform vs mvc
	http://www.codeproject.com/Articles/528117/WebForms-vs-MVC
	
	difference between ASP.NET (stateful) and ASP.NET-MVC (stateless) can be isolated 
	to the fact that the first provides server-side controls and the other do not.

	Bandwidth is more as client side state management options like Cookies, QueryStrings (URL), Hidden fields,
	View State and Control state involve in each roundtrip(as value posted to server)

	Web Forms supports Rich server controls.
	ASP.NET server control detects the browser and generates appropriate html and if required JavaScript also
	Rapid application development 

--RESTful services  vs restless

--mvc flows
	user make request
	Routing engine determine which request will be handled by which controller.
	Controller if required talk to model for data.
	Model operates on database (or on some other data sources) and return data (in form of business objects) to controller.
	Controller chooses the appropriate view (like say Customer view which will may contain some html tables, drop downs, textboxes…).
	Controller passes the data (model data retrieved in step 4) to chosen view(in step 5), where data will be populated as per convenience.
	Controller sends back view to the user.
	

--soap
	 SOAP means sending SOAP messages using HTTP. The SOAP messages have a pre-defined standard.
	 SOAP format is a kind of xml format.

--abstract class and interface
	
	http://www.c-sharpcorner.com/uploadfile/prasoonk/abstract-class-vs-interface/
	http://www.codeproject.com/Articles/11155/Abstract-Class-versus-Interface
	http://www.codeproject.com/Articles/6118/All-about-abstract-classes

	abstract class can not be sealed class
	abstract method cannot be private.
	Abstract and Interfaces can’t be instantiated directly.
	
	A class can implement any number of interfaces but a subclass can at most use only one abstract class.
	An abstract class can have non-abstract Methods(concrete methods) while in case of Interface all the methods has to be abstract.
	An abstract class can declare or use any variables while an interface is not allowed to do so.
	An abstract class can have constructor 
	all the members of interface are implicitly public.

	abstract class Can provide default behavior
		public abstract class Employee
			{
			public virutal String CalculateSalary()
				{
					//Can provide default behavior
				}
			}


	abstract class over interface
		http://www.codeproject.com/Articles/258173/Interfaces-Vs-Abstract-Classes

--sealed classes and sealed method
	A sealed class cannot be used as a base class.
	http://stackoverflow.com/questions/4152049/sealed-method-in-c-sharp

--Difference between Virtual and Abstract Methods
	
	abstract == MustOverride (have only defination  no actual code )
	virtual == Overridable (have actual code but says child class use mine functionality or you can overide me and provide ur own functionality)
	
	http://stackoverflow.com/questions/14728761/difference-between-virtual-and-abstract-methods
	http://stackoverflow.com/questions/391483/what-is-the-difference-between-an-abstract-function-and-a-virtual-function


--partial class	
	defination of one file destributed over differ files and compile as single file	

--overriding and overloading
	http://www.aspdotnet-suresh.com/2013/09/c-sharp-overloading-and-overriding-differences-with-example.html
	
	-  Overloading (Called as Early Binding or Compile Time Polymorphism or static binding)
       	-  Overriding (Called as Late Binding or Run Time Polymorphism or dynamic binding)
       		We can override a method in base class by creating similar function in derived class
       		this can be achieved by using inheritance principle and using “virtual & override” keywords.
	
	-Overriding (eg)
		class Base {
   			public virtual void Test() { ... }
		}
		class Subclass1 : Base {
   			public override void Test() { ... }
		}

--function and procedure
	http://stackoverflow.com/questions/771949/what-is-the-difference-between-function-and-procedure-in-pl-sql
	= http://www.dotnet-tricks.com/Tutorial/sqlserver/7EDL150912-Difference-between-Stored-Procedure-and-Function-in-SQL-Server.html
--inline function
	inline functions are parameterized views. By nature Views do not accept parameters in the search conditions.

--mvc2 vs mvc3
	http://onlydifferencefaqs.blogspot.in/2012/09/difference-between-mvc-2-and-mvc-3-in.html
	
	mvc3
		support for Both Master Page (.master) and Layout Page (_Layout.cshtml)
		razor introduce
		ViewBag introduce

	
	session
		set session variable at session_start in method in global.asax.cs.You should not set session variables in Application_Start(), 
		as that method is only called once
		if you want to do something after session expired then write line of code within Session_End method in Global.asax.cs as below
	
	ViewData vs ViewBag vs TempData vs Session
		http://www.dotnet-tricks.com/Tutorial/mvc/9KHW190712-ViewData-vs-ViewBag-vs-TempData-vs-Session.html

	interview Question
		http://www.codeproject.com/Articles/556995/MVC-interview-questions-with-answers

--Route constraint	
	Route Constraints allow us to apply a regular expression to a URL segment to restrict whether the route will match the request
	http://www.itorian.com/2013/10/route-constraints-in-mvc.html

--type of action result
	http://mvc4beginner.com/Tutorial/Action-Result-Return-Type.html

--razor vs aspx
	http://www.dotnet-tricks.com/Tutorial/mvc/91JM151212-Difference-Between-Razor-View-Engine-and-ASPX-View-Engine.html
	razor
		--it is slow as compare aspx view
		--simple easy to understand and reduce typing
		--By default, Razor Engine prevents XSS attacks(Cross-Site Scripting Attacks)
		  it encodes the script or html tags like <,> before rendering to view.
		--Razor Engine support TDD (Test Driven Development) 

--bundles
	http://www.codeproject.com/Tips/389545/ASP-NET-MVC-Bundling-and-Minification

--readonly vs constant vs static 
	http://www.dotnet-tricks.com/Tutorial/csharp/FU4N141113-Difference-Between-Constant-and-ReadOnly-and-Static.html
	
	Constant and ReadOnly keyword are used to make a field constant which value cannot be modified.
	By default constant are static, hence you cannot define a constant type as static.
	
	The static keyword is used to specify a static member, which means static members are common to all the objects and they do not tied to a specific object
	
	Constant value must be assigned at the time of declaration (compile time)
	Readonly value can be initialized either at the time of declaration or with in the constructor of same class (runtime)
	
	static 
		static data member
			A static member belongs to the class rather than to the objects of the class.
			You can't use this keyword with static
		static constructor
			Static constructor can't be parameterized
			Static Constructor is used to initialize static data members of the class.
		Static Properties
			Static properties are used to get or set the value of static data members of a class.
		static method
			Static methods only use static data members to perform calculation or processing.
			called with the class name 

--c# get set properties
	Properties are a way to control access to your private members
	Properties have many uses: they can validate data before allowing a change;
	 they can transparently expose data on a class where that data is actually retrieved from some other source, 
	such as a database; they can take an action when data is changed, such as raising an event, 
	or changing the value of other fields.

Types of trigger

	trigger is a special kind of a store procedure that executes in response to certain action
	
	--After Triggers (For Triggers)
		
		CREATE TRIGGER trgAfterInsert ON [dbo].[Employee_Test] 
		FOR INSERT/UPDATE/DELETE
		AS
		begin
		end
	
	--Instead of trigger
		CREATE TRIGGER trgAfterInsert ON [dbo].[Employee_Test] 
		insted of INSERT/UPDATE/DELETE
		AS
		begin
			if(sal>100)
				rollback;
			else
				commmit;
		end
	
--struck, classes and enumrator

http://stackoverflow.com/questions/12505666/crm-2011-server-side-paging-data-parallelism-using-linq-provider


--MS-SQL Server 2005,2008

--Authentication attribute
	http://codereview.stackexchange.com/questions/7234/mvc-custom-authentication-authorization-and-roles-implementation

--Attributes in DAtaAnnotation
	--Bind attributes
		[bind(Exclude="CouponCode")] attribute will exclude an "CouponCode" property from being posted to server

--output cache attribute
	understanding
	--http://www.dotnet-tricks.com/Tutorial/mvc/4R5c050113-Understanding-Caching-in-Asp.Net-MVC-with-example.html

	cache location abd varybyparam properties
	--


--What are attributes and filters in mvc

	http://www.codeproject.com/Articles/577776/Filters-and-Attributes-in-ASPNET-MVC
	
	MVC provides a very clean way of injecting the pre-processing and post-processing logic for actions and controllers.
	We can put the pre-processing and post-processing logic is by decorating the actions with attributes
	which will invoke an attribute class implementing the filter's logic.

	types of filter
		Authorization filter
		Action filter
		Result filter
		Exception filter

	Configuring Filters

		Global level
			protected void Application_Start()
			{
 			FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
			}
		Controller level
			[Authorize(Roles="Admin")]
			public class AdminController : Controller

		Action level
			[Authorize(Users="User1,User2")]
 			public ActionResult LinkLogin(string provider)


--Diff betwn Html.Action() or Html.RenderAction()
	The difference between the two is that 
	Html.RenderAction will render the result directly to the Response
	(which is more efficient if the action returns a large amount of HTML) 
	whereas Html.Action returns a string with the result.
	This method result can be stored in a variable, since it returns string type value.

--Diff betwn Html.Partial() or Html.RenderPartial()
	same for partial
	
	eg
	public static MvcHtmlString Partial(this HtmlHelper htmlHelper, string partialViewName, object model, ViewDataDictionary viewData)
	{
    	return mvcHtmlString; //encoded string
	}

	public static void RenderPartial(this HtmlHelper htmlHelper, string partialViewName)
	{
    	htmlHelper.RenderPartialInternal(partialViewName, htmlHelper.ViewData, null, htmlHelper.ViewContext.Writer, ViewEngines.Engines);
	}
	
--Partial And Action
	Partial :Simple to use and no need to create any child action.
		Html.Partial("_Comments")
	action: we need to create a child action for the rendering the partial view.
		@{Html.Action("Category","Home");} 

	renderPartial and renderAction
		here result will directly written to the HTTP response stream 
	
	Partial and Action
		here result can be stored in a variable, since it returns string type value.


--RenderPartial vs RenderAction vs Partial vs Action
	http://www.dotnet-tricks.com/Tutorial/mvc/Q8V2130113-RenderPartial-vs-RenderAction-vs-Partial-vs-Action-in-MVC-Razor.html
	
	result will be directly written to the HTTP response stream
	
--cast vs conversion vs parse
	Casting: Telling the compiler that an object is really something else without changing it (though some data loss may be incurred).

		object obj_s= "12345";
		string str_i = (string) obj; // "12345" as string, explicit

	Parsing: Telling the program to interpret (on runtime) a string.

		string int_s = "12345";
		int i = int.Parse(int_s); // 12345 as int

	Converting: Telling the program to use built in methods to try to change type for what may be not simply interchangeable.


--git vs svn
	http://mrbool.com/differences-between-git-and-svn/30636
	http://agile.dzone.com/articles/version-control-git-vs-svn
	https://git.wiki.kernel.org/index.php/GitSvnComparsion

	svn
		SVN has one central repository,

		SVN if the central repository goes down or the code has broken the build 
		then no other developers can commit there code until the repository is fixed.
		
		SVN if your working without an internet connection 
		you have lost all the features of version control. 

	git
		GIT has multiple repositories,
		one central repository but each developer has their own repository.		

		benefit of having a local repository is that it is quick,
		there is no network traffic needed to commit code into source control

		Git's repository and working directory sizes are extremely small when compared to SVN.

--web api in mvc
	-- see point at http://www.codeproject.com/Articles/556995/MVC-interview-questions-with-answers#How_to_implement_Ajax_in_MVC
	--Output of WebAPI are simple string messages, JSON, simple XML format

-- enable data annotation validation on client side
	--1) 	<script src="<%= Url.Content("~/Scripts/jquery.validate.js") %>" type="text/javascript"></script>
		<script src="<%= Url.Content("~/Scripts/jquery.validate.unobtrusive.js") %>" type="text/javascript">
	--2)	<% Html.EnableClientValidation(); %>


--session state management in .net 

--Client side State management
	cookies
	query string
	view state
	hidden field

--Server Side State management:  http://www.c-sharpcorner.com/UploadFile/freelance91/ASPNETstatemanagementtechniques01012007212655PM/ASPNETstatemanagementtechniques.aspx
	Application object
		Application object is used to store data which is visible 
		across entire application and shared across multiple user sessions
		like connection strung
	
	Session object:

		--Session state can be configured using the <session State> section in the application's web.config file. 
		--<sessionState mode = <"inproc" | "sqlserver" | "stateserver">
 		   cookieless = <"true" | "false">  
		--Default session timeout value is 20 
	

	In-Proc.
		In-Proc session handling then all the session information will be stored in the server memory.(w3wp.exe which is is a ISS Application Pool Process/worker process ) 
		This is the default session state in ASP.NET.
	
	StateServer.
 		session data will be stored in a separate computer(server) and the session data will be handled by a windows service.
	
	SQLServer.
		session data will be stored in the SqlServer.
		The benefit of having this scenario is that the data is stored in a centralized database rather than the server memory.
	
--Asp.Net Web API VS Asp.Net MVC
	http://www.dotnet-tricks.com/Tutorial/webapi/Y95G050413-Difference-between-ASP.NET-MVC-and-ASP.NET-Web-API.html
	
	Asp.Net MVC is used to create web applications that returns both views and data
	but Asp.Net Web API is used to create full blown HTTP services with easy and simple way that returns only data not view.

	In Web API the request are mapped to the actions based on HTTP verbs but in MVC it is mapped to actions name.
	
	Web API helps to build REST-ful services 

--mvc3 vs mvc4
	http://www.slideshare.net/umarali1981/difference-between-aspnet-mvc-3-and-aspnet-mvc-4	
	mvc4
		--Bundle and manificate
		--its is possible to provide authentication using popular site twiter facebook
		  (by using OpenDotNetAuth library availbalein mvc4)
		--Mobile project templates is available in mvc4
		--we can place controller to custom location in mvc4 but in mvc3 2 controller is alway place inside controller folder
		--Asynchronous(in parallel) Controller is difference
		--webapi feature availble in mv4


--Asynchronous(in parallel) Controller
	http://www.codeproject.com/Tips/526099/Asynchronous-Controller-in-ASP-NET-MVC

--jquery means
	it is a fast and concise JavaScript Library that simplifies HTML document traversing, 
	event handling, animating, and Ajax interactions for rapid web development".
	
--jquery to hide all div by class name
	$('.hide').hide();

	show first div
	$('.hide').eq(0).show();

--ajax
	$.ajax({
  		url: o.url,
  		type: 'post',
  		contentType: "application/x-www-form-urlencoded",
  		data: '{"method":"getStates", "program":"EXPLORE"}',
  		success: function (data, status) {
  		  	console.log("Success!!");
  		  	console.log(data);
  		  	console.log(status);
  			},
  		error: function (xhr, desc, err) {
  		  	console.log(xhr);
  		  	console.log("Desc: " + desc + "\nErr:" + err);
  			}
		});

	http://code.tutsplus.com/tutorials/5-ways-to-make-ajax-calls-with-jquery--net-6289

--difference arraylist and array
	array
		Array are strongly type collection and allow to store fixed length.

	arraylist
		Array lists are not strongly type collection. 
		It will store values of different datatypes or same datatype. 
		Array list size will increase or decrease dynamically it can take any size of values from any data type

--difference between for and foreach
	If you are iterating through a collection of items, and do not care about the index values
	then foreach is more convenient, easier to write and safer: you can't get the number of items wrong.
	You do not need to specify the loop bounds minimum or maximum.

	Example
		http://www.onlinebuff.com/article_difference-between-for-loop-and-for-each-loop-in-csharp_1.html

--use of var in c#
	-Var is an implicit type.Implicit means indirect way of defining variable types.
	-by looking into left hand side right side datatype is deine.
	-it is determine at compile time
	-var isn't a type. The actual type is figured out at compile-time.
	-the variable cannot be initialized to null
	

	-make code more readable and understandable.
	-When you are using LINQ and anonymous types “Var” keyword reduces your code for creating special classes.
	example
	class MyData
	{
		public int Len;
		public string Value;
	}
	
	IEnumerable<MyData> obj = from x in Arr where x.Length > 5 select new { Len = x.Length, Value = x };
	var obj = from x in Arr where x.Length > 5 select new { Len = x.Length, Value = x };


	http://www.dotnetfunda.com/articles/show/1567/what-is-the-use-of-var-keyword-in-csharp

--Implicit type var And Anonymous Type var
	http://social.msdn.microsoft.com/Forums/vstudio/en-US/af2d0b6c-f1f3-4007-9f65-4418aa940c82/what-are-implicit-type-var-and-anonymous-types?forum=csharpgeneral

--var vs dynamic VS object		
	var:
	-it is an implicit type but static (types are checked at compile time)

	dynamic:
	-it is an implicit type but Dynamic (types are checked at run time)

	where to use? http://www.codeproject.com/Articles/393229/dynamic-type-in-Csharp-Where-and-how-to-use-Ho	
	http://www.codeproject.com/Tips/460614/Difference-between-var-and-dynamic-in-Csharp

	object
	Object is the base class for all derived classes. It provides some methods and capabilities. All derived types can be referenced through the object base type

--var as return type in c#
	


--types of data type
	Implicit types = var
	Explicit types
	http://www.udemy.com/blog/c-sharp-data-types/

--use of linQ over store procedure
	https://www.linkedin.com/groups/Which-is-better-using-LINQ-2366851.S.97395819
	http://stackoverflow.com/questions/14250855/what-are-the-advantages-using-linq-than-stored-procedure
	http://stackoverflow.com/questions/14530/linq-to-sql-vs-stored-procedures

	realistically it depends.. Linq will send a complete query over the network to access the database, 
	where as using sprocs is going to only transmit the relative name of the sproc you want to run. 
	With that said you could say that if you are going to try and transmit a million linq requests 
	over a standard 10/100 network then yes sprocs would be better, but over all it's not going 
	to be enough to notice honestly.

	The better question is what is the end goal? Linq has the advantage of being testable, 
	and gives you the ability to secure it on the controller and view's ends 
	so it allows better security. Also Linq is going to be Type Safe. 
	Ultimately it's personal preference in my estimation.
	
	linq works in both DB server memory and web server memory so its being costly

--use of linQ or Advantage
	http://social.msdn.microsoft.com/Forums/en-US/cd952b8e-4bc6-4be9-87d3-cec7fbe7a0d8/advantages-disadvantages-of-linq?forum=linqtosql
	http://careerride.com/LINQ-defined.aspx
	http://www.c-sharpcorner.com/UploadFile/c5c6e2/using-linq-in-net/
	
	LINQ expressions are Strongly Typed.
	Queries can be dynamically
	Tables are automatically created into class
	Columns are automatically created into properties
	Relationship are automatically appeaded to classes
	Lambda expressions are awesome
	

--linQ and pagination

	int totalCount = from item in _dc.Items
                 where item.Description.
                 Contains(description).Count();

	int numberOfPages = (int)(totalCount/pageSize);
	
	Query:
	from item in _dc.Items
          where item.Description.
          Contains(description).
          Skip((pageIndex - 1) * pageSize).
          Take(pageSize);

--use of lamba expression
	allow code blocks to be written "in-line" where delegate values are expected.
	they provide a very compact and type-safe way to write functions that can be passed as arguments for subsequent evaluation.
	
	http://weblogs.asp.net/scottgu/new-orcas-language-feature-lambda-expressions
	http://www.developer.com/net/csharp/article.php/3598381/The-New-Lambda-Expressions-Feature-in-C-30.htm

--delegates in c#
	Delegate is a type which holds the method(s) reference in an object. 
	It is also referred to as a type safe function pointer.
	
	//create delegate instances
         NumberChanger nc1 = new NumberChanger(AddNum);
         NumberChanger nc2 = new NumberChanger(MultNum);
         //calling the methods using the delegate objects
         nc1(25);
         
	http://www.tutorialspoint.com/csharp/csharp_delegates.htm

--Polymorphism
	http://www.onlinebuff.com/article_oops-principle-polymorphism-in-c-with-an-example_17.html
	
--types of inhertence
	http://programcall.com/20/csnet/types-of-inheritance-in-csnet.aspx
	
--string builder
	http://www.codeproject.com/Articles/6771/String-Vs-StringBuilder-C
	
	big perormance issue: the concatenation will create a new string 

--Web api self hosting
	http://www.dotnetcurry.com/showarticle.aspx?ID=896

--whats javascript protocol
	http://crisp.tweakblogs.net/blog/313/the-useless-javascript-pseudo-protocol.html
	http://stackoverflow.com/questions/10068781/what-does-the-javascript-pseudo-protocol-actually-do

-- return false vs preventdefault

--cluster and non-cluster index
	http://www.codeproject.com/Articles/173275/Clustered-and-Non-Clustered-Index-in-SQL
	
	awsm = https://www.youtube.com/watch?v=ITcOiLSfVJQ
	
	primary key generate cluster index
	unique key generate non cluster index
	
	A table has many non clustered indexes
	A table can contain only one clustered indexes
	
	Cluster index generate a binary tree
	while in non cluster index all information are store at leaf node

--delete vs drop in sql server
	Drop table..it will delete complete table from the Database.it can not retrieved bak 
	Delete is used to deleting data from the table.. data can be retrieved using ROLLBAck.

--differnce between RANK and DENSE_RANK  function
	http://stackoverflow.com/questions/12739208/how-to-use-rank-in-sql-server
	
--SQL query to find Nth highest salary from a salary table
	http://stackoverflow.com/questions/3850034/sql-query-to-find-nth-highest-salary-from-a-salary-table


